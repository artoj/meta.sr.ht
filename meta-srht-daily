#!/usr/bin/env python3
from srht.config import cfg
from srht.database import DbSession
db = DbSession(cfg("meta.sr.ht", "connection-string"))
from metasrht.types import User, UserType
db.init()

import sys
from metasrht.audit import expire_audit_logs
from metasrht.email import send_email
from datetime import datetime, timedelta

print("Running daily cron")
print("Expiring old audit log entires")
expire_audit_logs()

if cfg("meta.sr.ht::billing", "enabled") == "yes":
    print("Running billing")
    from metasrht.billing import charge_user
    for user in (User.query
                .filter(User.payment_cents != 0)
                .filter(User.payment_due < datetime.utcnow())
            ).all():
        charge_user(user)
        db.session.commit()

print("Sending welcome emails")
users = (User.query
        .filter(User.welcome_emails == 0)
        .filter(User.user_type != UserType.unconfirmed)
        .filter(User.created < datetime.utcnow() + timedelta(days=-1))
    ).all()
nsent = 0
for user in users:
    encrypt_key = None
    if user.pgp_key:
        encrypt_key = user.pgp_key.key
    print(f"Sending to ~{user.username} ({nsent + 1}/{len(users)})")
    send_email("welcome", user.email, f"Welcome to {cfg('sr.ht', 'site-name')}!",
            headers={
                "From": f"{cfg('sr.ht', 'owner-name')} <outgoing@sr.ht>",
                "To": "{} <{}>".format(user.username ,user.email),
                "Reply-To": f"{cfg('sr.ht', 'owner-name')} <{cfg('sr.ht', 'owner-email')}>",
            },
            encrypt_key=encrypt_key)
    user.welcome_emails += 1
    db.session.commit()
    nsent += 1
